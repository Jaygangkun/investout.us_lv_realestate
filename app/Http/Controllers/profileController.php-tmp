<?php

namespace App\Http\Controllers;

use App\Http\Requests\profileUpdate;
use App\Profile;
use App\User;

use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Session;

class profileController extends Controller {
	protected $layout;
	protected $userTxt;

	public function show($user, $adminView = null) {
		if ($adminView) {
			$member    = User::find($adminView)->first();
			$adminview = true;
			return view('commons.profile.profile_view', compact('member', 'adminview'));
		} else {
			$member    = auth()->user();
			$adminview = false;
			return view('commons.profile.profile_view', compact('member', 'adminview'));
		}
	}

	public function edit($user) {
		return view('commons.profile.profile_edit');
	}

	public function update(profileUpdate $request) {
		$user    = Auth::user();
		$profile = $user->profile;

		$profileData = $request->all(['location', 'phone', 'city', 'state', 'zipCode', 'company', 'aboutme', 'experience', 'socialmedia', 'inputvideo']);
		$userData    = $request->all(['first_name', 'last_name', 'email']);

		if (User::where('id', $user->id)->first()->email != $userData['email']) {
			$request->validate([
					'email' => 'unique:users']);
		}

		if (Profile::where('id', $profile->id)->first()->image != $request->input('profile_img')) {
			// to handle upload and moving of profile picture

			if ($request->hasFile('profile_image')) {
				$image           = $request->file('profile_image');
				$image_name      = time().'.'.$image->getClientOriginalExtension();
				$destinationPath = public_path('/profilepic/');
				// $destinationPath = '/home/tyronejglover/public_html/profilepic/';
				$image->move($destinationPath, $image_name);
				$profileData['image'] = $image_name;
			} else {
				$profileData['image'] = 'default.png';
			}
		} else {
			$profileData['image'] = $request->input('profile_img');
		}

		$use = User::where('id', $user->id)->update([
				'first_name' => $userData['first_name'],
				'last_name'  => $userData['last_name'],
				'email'      => $userData['email'],
			]);

		Profile::where('user_id', $user->id)->update($profileData);

		Session::put('profile', Profile::where('user_id', $user->id)->first());

		return redirect(route('profile.show', $user->roles()->first()->slug));
	}

	public function destroy($id) {
		User::find($id)->delete();
		Profile::where('user_id', $id)->delete();
		return redirect()->back();
	}
}
